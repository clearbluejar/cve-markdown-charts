import cvrf as cvrfdata
import os
import re
import gzip
import json

def open_gz_json(path):    
    
    with gzip.GzipFile(path,"r") as f:        
        return json.loads(f.read())           


# uses WinBinDiff data to map fileinfo description tags to binary names to build 

msrc_cvrf_json = cvrfdata.get_msrc_merged_cvrf_json()


tag_set = set()

for cvrf_json in msrc_cvrf_json:
    if cvrf_json.get("Vulnerability"):
        [tag_set.add(note.get('Value').lower()) for vuln in cvrf_json["Vulnerability"] for note in vuln['Notes']
                    if note['Type'] == 7 and note.get('Value')]

tag_set = sorted(tag_set)

for tag in tag_set:
    print(tag)


files_dir = '/Users/yoda/Downloads/winbindex-gh-pages/data/by_filename_compressed'
wb_tags = {}

total = len(os.listdir(files_dir))
for i,file in enumerate(os.listdir(files_dir)):
    print(f"file {i} of {total}")
    if re.search('exe|dll|sys|winmd|cpl|ax|node|ocx|efi|acm|scr|tsp|drv',file):
        file_json = open_gz_json(os.path.join(files_dir,file))

        for bin in file_json:

            if file_json[bin].get('fileInfo'):
                if file_json[bin]['fileInfo'].get('description'):
                    wb_tags.setdefault(file_json[bin]['fileInfo']['description'],[])
                    filename = file.replace('.json.gz','')
                    if filename not in wb_tags[file_json[bin]['fileInfo']['description']]:
                        wb_tags[file_json[bin]['fileInfo']['description']].append(filename)


 # sorted_tags = {k: tags[k] for k in sorted(
    #     tags, key=lambda x: len(tags[x]), reverse=True)}
wb_tags = {k: wb_tags[k] for k in sorted(wb_tags,key=lambda x: x, reverse=True)}

for tag in wb_tags:
    print(tag)



with open('msrc-tags.json', 'w') as f:
    json.dump(tag_set,f)

with open('bins-to-description.json', 'w') as f:
    json.dump(wb_tags,f)

print(len(tag_set))
print(len(wb_tags))


    
